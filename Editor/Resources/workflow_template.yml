name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      build_set:
        type: string
        required: true

jobs:
  parse_input:
    name: Parse input
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "matrix={\"include\":${{ github.event.inputs.build_set }}}" >> $GITHUB_OUTPUT

  build_and_deploy:
    name: Build ${{ matrix.buildPlatform }} and Deploy to ${{ matrix.deployPlatform }}
    needs: parse_input
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.parse_input.outputs.matrix) }}
    steps:
      # --- Build ---
      - name: Build
        id: build
        uses: mnicolas94/UnityCICDWorkflows/.github/actions/build@v1
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.buildPlatform }}
          developmentBuild: ${{ matrix.developmentBuild }}
          # Android specific
          androidAppBundle: ${{ fromJson(matrix.buildParams).appBundle }}
          androidKeystoreName: ${{ secrets.ANDROID_KEYSTORE_NAME }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      # --- Deploy ---
      - name: Deploy
        uses: mnicolas94/UnityCICDWorkflows/.github/actions/deploy@v1
        with:
          deployPlatform: ${{ matrix.deployPlatform }}
          buildPath: ${{ steps.build.outputs.buildPath }}
          version: ${{ steps.build.outputs.version }}
          # Telegram
          telegram_message: ${{ fromJson(matrix.deployParams).message }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          # Itch
          itch_channel: ${{ fromJson(matrix.deployParams).channel }}
          ITCH_BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDENTIALS }}
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          # PlayStore
          playstore_track: ${{ fromJson(matrix.deployParams).track }}
          playstore_status: ${{ fromJson(matrix.deployParams).status }}
          playstore_inAppUpdatePriority: ${{ fromJson(matrix.deployParams).inAppUpdatePriority }}
          playstore_userFraction: ${{ fromJson(matrix.deployParams).userFraction }}
          PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          PLAY_STORE_PACKAGE_NAME: ${{ secrets.PLAY_STORE_PACKAGE_NAME }}

      # --- Notify ---
      - name: Get platform display name
        id: display_name
        uses: mnicolas94/UnityCICDWorkflows/.github/actions/platform-display-name@v1
        with:
          platform: ${{ matrix.buildPlatform }}
      - name: Construct message info
        id: messageInfo
        run: |
          name="${{ steps.build.outputs.projectName }}"
          nice_name=${name// /_}
          messageInfo="#$nice_name (${{ steps.build.outputs.version }}): #${{ steps.display_name.outputs.display_name }} >> #${{ matrix.deployPlatform }}"
          echo "info=$messageInfo" >> $GITHUB_OUTPUT
      
      # Success message
      - name: Send success message if not failed
        uses: mnicolas94/UnityCICDWorkflows/.github/actions/notify@v1
        with:
          notifyPlatform: ${{ matrix.notifyPlatform }}
          message: "✅ Success ${{ steps.messageInfo.outputs.info }}"
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
      
      # Error message
      - name: Send error message if failed
        if: ${{ failure() }}
        uses: mnicolas94/UnityCICDWorkflows/.github/actions/notify@v1
        with:
          notifyPlatform: ${{ matrix.notifyPlatform }}
          message: "⚠️ Error ${{ steps.messageInfo.outputs.info }}"
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
