name: Build and Deploy

on:
  workflow_call:
    inputs:
      json_parameters:
        type: string
        required: true
    secrets:
      # Build secrets
      UNITY_LICENSE:
        required: true
      # Build for Android
      ANDROID_KEYSTORE_NAME:
        required: true
      ANDROID_KEYSTORE_BASE64:
        required: true
      ANDROID_KEYSTORE_PASS:
        required: true
      ANDROID_KEYALIAS_NAME:
        required: true
      ANDROID_KEYALIAS_PASS:
        required: true
      # Telegram
      TELEGRAM_SESSION:
        required: true
      TELEGRAM_API_ID:
        required: true
      TELEGRAM_API_HASH:
        required: true
      TELEGRAM_TOKEN:
        required: true
      TELEGRAM_CHAT_ID:
        required: true
      # Itch.io
      ITCH_BUTLER_CREDENTIALS:
        required: true
      ITCH_GAME:
        required: true
      ITCH_USER:
        required: true
      # Play Store
      PLAY_STORE_SERVICE_ACCOUNT_JSON:
        required: true
      PLAY_STORE_PACKAGE_NAME:
        required: true
      

jobs:
  parse_input:
    name: Parse input
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: echo "matrix={\"include\":${{ github.event.inputs.json_parameters }}}" >> $GITHUB_OUTPUT

  build_and_deploy:
    name: Build ${{ matrix.buildPlatform }} and Deploy to ${{ matrix.deployPlatform }}
    needs: parse_input
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.parse_input.outputs.matrix) }}
    steps:
      # --- Store start time
      - name: Store start time
        id: time
        run: |
          echo "start=$(date +%s)" >> $GITHUB_OUTPUT

      # --- Free disk space if requested
      - name: Free CI system disk space
        if: ${{ matrix.freeDiskSpace == 'true' }}
        uses: kfir4444/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: false
          swap-storage: false
          
      # --- Build ---
      - name: Build
        id: build
        uses: mnicolas94/facticus-deploy/.github/actions/build@v0.3.11
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: ${{ matrix.buildPlatform }}
          developmentBuild: ${{ matrix.developmentBuild }}
          versioningStrategy: ${{ matrix.versioningStrategy }}
          buildVariables: ${{ matrix.buildVariables }}
          # Android specific
          androidAppBundle: ${{ fromJson(matrix.buildParams).appBundle }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystoreName: ${{ secrets.ANDROID_KEYSTORE_NAME }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ secrets.ANDROID_KEYALIAS_NAME }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}

      # --- Deploy ---
      - name: Deploy
        uses: mnicolas94/facticus-deploy/.github/actions/deploy@v0.3.11
        with:
          deployPlatform: ${{ matrix.deployPlatform }}
          buildPath: ${{ steps.build.outputs.buildPath }}
          version: ${{ steps.build.outputs.version }}
          # Telegram
          telegram_message: ${{ fromJson(matrix.deployParams).message }}
          TELEGRAM_SESSION: ${{ secrets.TELEGRAM_SESSION }}
          TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
          TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          # Itch
          itch_channel: ${{ fromJson(matrix.deployParams).channel }}
          ITCH_BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDENTIALS }}
          ITCH_GAME: ${{ secrets.ITCH_GAME }}
          ITCH_USER: ${{ secrets.ITCH_USER }}
          # PlayStore
          playstore_track: ${{ fromJson(matrix.deployParams).track }}
          playstore_status: ${{ fromJson(matrix.deployParams).status }}
          playstore_inAppUpdatePriority: ${{ fromJson(matrix.deployParams).inAppUpdatePriority }}
          playstore_userFraction: ${{ fromJson(matrix.deployParams).userFraction }}
          PLAY_STORE_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_STORE_SERVICE_ACCOUNT_JSON }}
          PLAY_STORE_PACKAGE_NAME: ${{ secrets.PLAY_STORE_PACKAGE_NAME }}

      # --- Notify ---
      - name: Get platform display name
        if: success() || failure()
        id: display_name
        uses: mnicolas94/facticus-deploy/.github/actions/platform-display-name@v0.3.11
        with:
          platform: ${{ matrix.buildPlatform }}
          
      - name: Get project name variable
        if: success() || failure()
        id: project_name
        uses: mnicolas94/facticus-deploy/.github/actions/get-project-name@v0.3.11
        
      - name: Get total elapsed time
        if: success() || failure()
        id: elapsed
        run: |
          start=${{ steps.time.outputs.start }}
          end=$(date +%s)
          elapsed=$((end - start))
          hours=$((elapsed / 3600))
          minutes=$((elapsed % 3600 / 60))
          seconds=$((elapsed % 60))
          formatted_hours=$(printf "%02d" $hours)
          formatted_minutes=$(printf "%02d" $minutes)
          formatted_seconds=$(printf "%02d" $seconds)
          echo "hours=$formatted_hours" >> $GITHUB_OUTPUT
          echo "minutes=$formatted_minutes" >> $GITHUB_OUTPUT
          echo "seconds=$formatted_seconds" >> $GITHUB_OUTPUT
          
      - name: Construct message info
        if: success() || failure()
        id: messageInfo
        run: |
          name="${{ steps.project_name.outputs.projectNameNoSpaces }}"
          messageInfo="#$name (${{ steps.build.outputs.version }}): #${{ steps.display_name.outputs.display_name }} >> #${{ matrix.deployPlatform }}. Total time: ${{ steps.elapsed.outputs.hours}}:${{ steps.elapsed.outputs.minutes}}:${{ steps.elapsed.outputs.seconds}}"
          echo "info=$messageInfo" >> $GITHUB_OUTPUT

      # Success message
      - name: Send success message if not failed
        uses: mnicolas94/facticus-deploy/.github/actions/notify@v0.3.11
        with:
          notifyPlatform: ${{ matrix.notifyPlatform }}
          message: "✅ Success ${{ steps.messageInfo.outputs.info }}"
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

      # Error message
      - name: Send error message if failed
        if: failure()
        uses: mnicolas94/facticus-deploy/.github/actions/notify@v0.3.11
        with:
          notifyPlatform: ${{ matrix.notifyPlatform }}
          message: "⚠️ Error ${{ steps.messageInfo.outputs.info }}"
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}